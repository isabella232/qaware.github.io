<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on QAware | Software Engineering Blog</title><link>https://blog.qaware.de/tags/docker/</link><description>Recent content in Docker on QAware | Software Engineering Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright Â© 2020, QAware GmbH; all rights reserved.</copyright><lastBuildDate>Wed, 20 Sep 2017 15:06:32 +0200</lastBuildDate><atom:link href="https://blog.qaware.de/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>How to develop Eclipse SmartHome Bindings with IntelliJ and Docker</title><link>https://blog.qaware.de/posts/eclipse-smart-home-bindings/</link><pubDate>Wed, 20 Sep 2017 15:06:32 +0200</pubDate><guid>https://blog.qaware.de/posts/eclipse-smart-home-bindings/</guid><description>Developing the Eclipse SmartHome (ESH) bindings with another IDE than Eclipse is difficult because the standard way of developing the bindings requires the tools provided by the Eclipse IDE. One can develop the ESH bindings with IntelliJ, however a crucial question remains open: how to test the developed bindings without having the Eclipse tools at hand? Using IntelliJ to develop the ESH bindings is different to using Eclipse for two main reasons:</description></item><item><title>How to use Docker within IntelliJ</title><link>https://blog.qaware.de/posts/docker-intellij/</link><pubDate>Sat, 23 Apr 2016 10:39:32 +0200</pubDate><guid>https://blog.qaware.de/posts/docker-intellij/</guid><description>A short tutorial on how to use Docker within intelliJ and with a little help from Gradle. You can find the sample code &amp;amp; the full description here
Prerequisites Install IntelliJ Docker plugin Install Docker Machine Check that there is a default Docker Machine: docker-machine ls. If there is no default machine create one: docker-machine create --driver virtualbox default. Start the default Docker Machine: docker-machine start default.` Bind the env vars to the shell: eval &amp;quot;$(docker-machine env default)&amp;quot; Check if everything is correct: docker ps Using Docker within IntelliJ Setup Docker cloud provider in intelliJ global preferences as shown below.</description></item></channel></rss>