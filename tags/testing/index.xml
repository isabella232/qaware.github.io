<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing on QAware | Software Engineering Blog</title><link>https://blog.qaware.de/tags/testing/</link><description>Recent content in Testing on QAware | Software Engineering Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright Â© 2020, QAware GmbH; all rights reserved.</copyright><lastBuildDate>Fri, 28 Feb 2020 10:39:32 +0200</lastBuildDate><atom:link href="https://blog.qaware.de/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>OOP 2020</title><link>https://blog.qaware.de/posts/2020-02-28-oop/</link><pubDate>Fri, 28 Feb 2020 10:39:32 +0200</pubDate><guid>https://blog.qaware.de/posts/2020-02-28-oop/</guid><description>A field report from the 2020 OOP conference in Munich.</description></item><item><title>GUI Tests for JavaFX</title><link>https://blog.qaware.de/posts/java-fx-testing/</link><pubDate>Thu, 16 Apr 2015 10:39:32 +0200</pubDate><guid>https://blog.qaware.de/posts/java-fx-testing/</guid><description>This article summarizes my experiences when setting up UI tests for a new JavaFX application at QAware.
I had the following requirements for a JavaFX test framework:
Free (as in beer) Software with a permissive license Lean, pure Java framework Integration with JUnit Later on, the requirement to do headless tests was added. I will cover headless tests in a follow-up post.
A quick search reveals three contenders:</description></item></channel></rss>